name: Deploy to VPS

on:
  push: 
    branches: 
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy using ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            # Enable error handling
            set -e
            trap 'echo "An error occurred on line $LINENO"; exit 1' ERR

            echo "Navigating to the project directory or cloning the repository"
            # Navigate to the directory where the project is stored
            if [ -d "~/apps/reader/.git" ]; then
              echo "Directory exists and is a git repository. Pulling the latest changes..."
              cd ~/apps/reader
              git pull origin main
            else
              echo "Directory does not exist or is not a git repository. Cloning repository..."
              rm -rf ~/apps/reader  # Remove if a non-git directory exists
              git clone git@github.com:m1ggy/manga-reader.git ~/apps/reader
            fi

            echo "Checking if nvm is installed"
            # Install nvm if it's not installed
            if ! command -v nvm &> /dev/null; then
              echo "Installing nvm..."
              curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
              source ~/.nvm/nvm.sh
            else
              echo "nvm is already installed"
            fi

            echo "Loading nvm and installing Node.js version from .nvmrc"
            # Load nvm and install Node.js version from .nvmrc
            source ~/.nvm/nvm.sh
            nvm install $(cat .nvmrc)

            echo "Checking if pm2 is installed"
            # Install pm2 if not installed
            if ! command -v pm2 &> /dev/null; then
              echo "Installing pm2..."
              npm install -g pm2
            else
              echo "pm2 is already installed"
            fi

            echo "Checking if pnpm is installed"
            # Install pnpm if not installed
            if ! command -v pnpm &> /dev/null; then
              echo "Installing pnpm..."
              npm install -g pnpm
            else
              echo "pnpm is already installed"
            fi

            echo "Adding environment variables to .env"
            # Add env variables
            echo "VITE_TITLE=\"Mangachows\"" >> .env
            echo "VITE_API_URL=\"https://api.mangachows.com/manga/mangadex/\"" >> .env
            echo "VITE_META_URL=\"https://api.mangachows.com/meta/\"" >> .env
            echo "VITE_BASE_API_URL=\"https://api.mangachows.com\"" >> .env

            echo "Installing dependencies and building the application"
            # Install dependencies and build the application
            pnpm install
            pnpm run build

            echo "Starting or reloading the application with pm2"
            # Start the application using pm2
            pm2 start ecosystem.config.js || pm2 reload ecosystem.config.js

            echo "Reloading Caddy"
            # Reload Caddy
            sudo caddy reload
